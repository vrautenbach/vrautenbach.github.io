{"version":3,"file":"index.e519fa93.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import \"ol-layerswitcher/dist/ol-layerswitcher.css\"\nimport \"ol/ol.css\"\nimport \"./style.css\"\n\nimport { Map, View } from \"ol\"\nimport LayerGroup from \"ol/layer/Group\"\nimport MapboxVector from \"ol/layer/MapboxVector\"\nimport { default as LayerTile, default as TileLayer } from \"ol/layer/Tile\"\nimport { default as OSM, default as TileJSON } from \"ol/source/OSM\"\nimport Stamen from \"ol/source/Stamen\"\nimport XYZ from \"ol/source/XYZ\"\n\nimport LayerSwitcher, {\n\tBaseLayerOptions,\n\tGroupLayerOptions\n} from \"ol-layerswitcher\"\n\n//import Circle from 'ol/geom/Circle';\nimport GeoJSON from \"ol/format/GeoJSON\"\nimport VectorLayer from \"ol/layer/Vector\"\nimport VectorSource from \"ol/source/Vector\"\nimport {\n\tCircle as CircleStyle,\n\tFill,\n\tIcon,\n\tStroke,\n\tStyle,\n\tText\n} from \"ol/style\"\n\nimport { platformModifierKeyOnly } from \"ol/events/condition\"\nimport { DragBox, Select } from \"ol/interaction\"\n\nimport Geocoder from \"ol-geocoder\"\nimport Overlay from \"ol/Overlay\"\n\nvar dataArray = []\nvar done = []\nvar test = null\nconst infoBox = document.getElementById(\"info\")\n\nfunction downloadCSVFile(csv_data) {\n\t// Create CSV file object and feed\n\t// our csv_data into it\n\tvar CSVFile = new Blob([csv_data], {\n\t\ttype: \"text/csv\"\n\t})\n\n\t// Create to temporary link to initiate\n\t// download process\n\tvar temp_link = document.createElement(\"a\")\n\n\t// Download csv file\n\ttemp_link.download = \"SAJG_export.csv\"\n\tvar url = window.URL.createObjectURL(CSVFile)\n\ttemp_link.href = url\n\n\t// This link should not be displayed\n\ttemp_link.style.display = \"none\"\n\tdocument.body.appendChild(temp_link)\n\n\t// Automatically click the link to\n\t// trigger download\n\ttemp_link.click()\n\tdocument.body.removeChild(temp_link)\n}\n\n$(document).ready(function () {\n\t$(\"#search-input\").on(\"keyup\", function () {\n\t\tvar value = $(this).val().toLowerCase()\n\t\t$(\"#info-table tr\").filter(function () {\n\t\t\t$(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n\t\t})\n\t})\n\t// var rowCount = $('#info-table tr').length - 1;\n\t// $('#lblName').text(rowCount + ' articles');\n})\n\n/*\n\tWhen user searches for key words bring up all the journal articals relating to that search\n\tOn a keyup clear the dataarrray and selected feartures so that every letter added starts on a clean seach\n\tLoop through the data on the map and the object values for each array item\n\tIf the searched value is inside on the object values then select that location point on the map \n\tAdd table of those search results journal entries and display table\n*/\n$(document).ready(() => {\n\tdocument.querySelector(\"#search-input\").value = \"\"\n\t$(\"#search-input\").toggle()\n\t$(\"#clear-button\").toggle()\n\t$(\"#tableToCSV\").toggle()\n\tlet timer = null\n\n\t$(\"#search-input\").on(\"keyup\", () => {\n\t\t// Restart timer on every keyup\n\t\tclearTimeout(timer)\n\t\tselectedFeatures.clear()\n\t\tdataArray = []\n\n\t\tconst searchValue = $(\"#search-input\").val().toLowerCase()\n\n\t\tif (searchValue !== \"\") {\n\t\t\tvectorLayer.getSource().forEachFeature((feature) => {\n\t\t\t\tconst objectArr = Object.values(feature.values_)\n\t\t\t\tobjectArr.map((values) => {\n\t\t\t\t\tif (values !== null) {\n\t\t\t\t\t\tconst stringValues = values.toString().toLowerCase()\n\t\t\t\t\t\tif (stringValues.includes(searchValue)) {\n\t\t\t\t\t\t\tselectedFeatures.push(feature)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\t/*\n\t\t\tWiats a second between keys pressed\n\t\t\tIf a second passes take the selected features from the search input and add it to the table \n\t\t\tDisplay the table and wordcloud\n\t\t*/\n\t\ttimer = setTimeout(() => {\n\t\t\taddDataToTable()\n\t\t\twordcloud()\n\t\t\ttoggleLayers()\n\t\t}, 1000)\n\t})\n})\n\n$(document).on(\"click\", \"#clear-button\", function () {\n\tselectedFeatures.clear()\n\tdataArray = []\n\t$(\"#info-table > tbody\").html(\"\")\n\ttoggleLayers()\n\t// Clear the search bar contents\n\tdocument.querySelector(\"#search-input\").value = \"\"\n})\n\n$(document).on(\"click\", \"#tableToCSV\", function () {\n\t// Variable to store the final csv data\n\tvar csv_data = []\n\n\t// Get each row data\n\tvar rows = document.getElementsByTagName(\"tr\")\n\tfor (var i = 0; i < rows.length; i++) {\n\t\t// Get each column data\n\t\tvar cols = rows[i].querySelectorAll(\"td,th\")\n\n\t\t// Stores each csv row data\n\t\tvar csvrow = []\n\t\tfor (var j = 0; j < cols.length; j++) {\n\t\t\t// Get the text data of each cell\n\t\t\t// of a row and push it to csvrow\n\t\t\tcsvrow.push(cols[j].innerHTML)\n\t\t}\n\n\t\t// Combine each column value with comma\n\t\tcsv_data.push(csvrow.join(\",\"))\n\t}\n\n\t// Combine each row data with new line character\n\tcsv_data = csv_data.join(\"\\n\")\n\n\t// Call this function to download csv file\n\tdownloadCSVFile(csv_data)\n})\n\nconst image = new CircleStyle({\n\tradius: 6,\n\tfill: new Fill({ color: \"#fc8d59\" }),\n\tstroke: new Stroke({ color: \"#f5f5f5\", width: 1.5 })\n})\n\nconst iconStyle = new Style({\n\timage: new Icon({\n\t\tanchor: [0.5, 46],\n\t\tanchorXUnits: \"fraction\",\n\t\tanchorYUnits: \"pixels\",\n\t\tsrc: \"data/pin-24.png\"\n\t})\n})\n\nconst style = new Style({\n\timage: image\n})\n\nconst vectorLayer = new VectorLayer({\n\tsource: new VectorSource({\n\t\turl: \"https://vrautenbach.github.io/SAJG_2021_v3.geojson\",\n\t\tformat: new GeoJSON()\n\t}),\n\tstyle: function (feature) {\n\t\t//style.getText().setText(feature.get('name'));\n\t\treturn style\n\t}\n})\n\nconst osm = new TileLayer({\n\ttitle: \"OpenStreetMap\",\n\ttype: \"base\",\n\tvisible: true,\n\tsource: new OSM()\n})\n\nconst hybrid = new TileLayer({\n\ttitle: \"MapTiler Satellite Hybrid\",\n\ttype: \"base\",\n\tvisible: false,\n\tsource: new XYZ({\n\t\turl: \"https://api.maptiler.com/maps/hybrid/256/{z}/{x}/{y}@2x.jpg?key=uBFqqVbfHTkiVSZLXuBJ\" //this works',\n\t})\n})\n\nconst satellite = new TileLayer({\n\ttitle: \"ArcGIS Satellite\",\n\ttype: \"base\",\n\tvisible: false,\n\tsource: new XYZ({\n\t\turl: \"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" //this works',\n\t})\n})\n\nconst terrain = new TileLayer({\n\ttitle: \"Stamen Terrain\",\n\ttype: \"base\",\n\tvisible: false,\n\tsource: new XYZ({\n\t\turl: \"https://stamen-tiles.a.ssl.fastly.net/terrain/{z}/{x}/{y}.jpg\" //this works',\n\t})\n})\n\nconst baseMaps = new LayerGroup({\n\ttitle: \"Basemaps\",\n\tlayers: [satellite, hybrid, terrain, osm]\n})\n\nconst map = new Map({\n\ttarget: \"map\",\n\tlayers: [baseMaps, vectorLayer],\n\tview: new View({\n\t\tcenter: [0, 0],\n\t\tzoom: 2\n\t})\n})\n\nconst layerSwitcher = new LayerSwitcher({\n\treverse: true,\n\tgroupSelectStyle: \"children\"\n})\n\nmap.addControl(layerSwitcher)\n\nfunction findValueInArray(value, arr) {\n\tvar result = \"Doesn't exist\"\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tvar name = arr[i]\n\t\tif (name == value) {\n\t\t\tresult = \"Exist\"\n\t\t\tbreak\n\t\t}\n\t}\n\treturn result\n}\n\n// a normal select interaction to handle click\nconst select = new Select()\nmap.addInteraction(select)\n\nconst selectedFeatures = select.getFeatures()\n\n// a DragBox interaction used to select features by drawing boxes\nconst dragBox = new DragBox({\n\tcondition: platformModifierKeyOnly\n})\n\nmap.addInteraction(dragBox)\n\n/*\n\tLoops through the data array\n\tAdds all the data in the data array into a table that will show below the map\n\tData of interest is Title, Author, Keywords, Abstract, Vol, Year and Link\n*/\nconst addDataToTable = () => {\n\tfor (var i = 0; i < dataArray.length; i++) {\n\t\ttest = dataArray[i].ID\n\n\t\tif (findValueInArray(test, done) == \"Doesn't exist\") {\n\t\t\t$(\"#info-table > tbody:last-child\").append(\n\t\t\t\t\"<tr>\" + // need to change closing tag to an opening `<tr>` tag.\n\t\t\t\t\t// + '<td>' + dataArray[i].ID + '</td>'\n\t\t\t\t\t\"<td>\" +\n\t\t\t\t\tdataArray[i].Title +\n\t\t\t\t\t\"</td>\" +\n\t\t\t\t\t\"<td>\" +\n\t\t\t\t\tdataArray[i].Author +\n\t\t\t\t\t\"</td>\" +\n\t\t\t\t\t\"<td>\" +\n\t\t\t\t\tdataArray[i].Keywords +\n\t\t\t\t\t\"</td>\" +\n\t\t\t\t\t//+ '<td><span class=\"more\">' + dataArray[i].Abstract + '</span></td>'\n\t\t\t\t\t\"<td>\" +\n\t\t\t\t\tdataArray[i].Abstract +\n\t\t\t\t\t\"</td>\" +\n\t\t\t\t\t\"<td>\" +\n\t\t\t\t\tdataArray[i].Vol +\n\t\t\t\t\t\"</td>\" +\n\t\t\t\t\t\"<td>\" +\n\t\t\t\t\tdataArray[i].Year +\n\t\t\t\t\t\"</td>\" +\n\t\t\t\t\t'<td><a href=\"' +\n\t\t\t\t\tdataArray[i].Link +\n\t\t\t\t\t'\" target=\"_blank\">' +\n\t\t\t\t\tdataArray[i].Link +\n\t\t\t\t\t\"</a></td>\" +\n\t\t\t\t\t\"</tr>\"\n\t\t\t)\n\t\t}\n\t\tdone.push(test)\n\t}\n}\n\n// Function to switch on and off layers\nconst toggleLayers = () => {\n\t$(\"#info\").toggle()\n\t// $(\"#search-input\").toggle()\n\t// $(\"#clear-button\").toggle()\n\t// $(\"#tableToCSV\").toggle()\n\t$(\"#myChart\").toggle()\n}\n\n// Fucntion that loops through the dataArray and adds the words into a worldcloud\nconst wordcloud = () => {\n\tvar result = dataArray.map((x) => x.Keywords)\n\tresult = result\n\t\t.toString()\n\t\t.toLowerCase()\n\t\t.replace(/[&\\/\\\\#^+()$~%.'\":;,*?<>{}!@]/g, \"\")\n\ttesting(result)\n}\n\ndragBox.on(\"boxend\", function () {\n\tdone = []\n\ttest = null\n\n\tconst rotation = map.getView().getRotation()\n\tconst oblique = rotation % (Math.PI / 2) !== 0\n\tconst candidateFeatures = oblique ? [] : selectedFeatures\n\tconst extent = dragBox.getGeometry().getExtent()\n\tvectorLayer.getSource().forEachFeatureInExtent(extent, function (feature) {\n\t\tcandidateFeatures.push(feature)\n\t})\n\n\tif (oblique) {\n\t\tconst anchor = [0, 0]\n\t\tconst geometry = dragBox.getGeometry().clone()\n\t\tgeometry.rotate(-rotation, anchor)\n\t\tconst extent = geometry.getExtent()\n\t\tcandidateFeatures.forEach(function (feature) {\n\t\t\tconst geometry = feature.getGeometry().clone()\n\t\t\tgeometry.rotate(-rotation, anchor)\n\t\t\tif (geometry.intersectsExtent(extent)) {\n\t\t\t\tselectedFeatures.push(feature)\n\t\t\t}\n\t\t})\n\t}\n\n\t// Add the data to the table\n\taddDataToTable()\n\t// Add datas keywords to wordcloud\n\twordcloud()\n\n\t// var rowCount = $('#info-table tr').length - 1;\n\t// $('#lblName').text(rowCount + ' articles');\n\t// Show the table below the map\n\ttoggleLayers()\n\n\t// Clear contents of search bar\n\tdocument.querySelector(\"#search-input\").value = \"\"\n})\n\n// clear selection when drawing a new box and when clicking on the map\ndragBox.on(\"boxstart\", function () {\n\tselectedFeatures.clear()\n\tdataArray = []\n\t$(\"#info-table > tbody\").html(\"\")\n\n\t// If the table is showing hide the table\n\tif ($(\"#info\").is(\":visible\")) {\n\t\ttoggleLayers()\n\t}\n})\n\nselectedFeatures.on([\"add\", \"remove\"], function () {\n\t//alert('feature added or removed');\n\tconst names = selectedFeatures.getArray().map(function (feature) {\n\t\tdataArray.push({\n\t\t\t// Address: feature.properties.Address,\n\t\t\tTitle: feature.get(\"Title\"),\n\t\t\tAuthor: feature.get(\"Author\"),\n\t\t\tKeywords: feature.get(\"Keywords\"),\n\t\t\tAbstract: feature.get(\"Abstract\"),\n\t\t\tVol: feature.get(\"Vol\"),\n\t\t\tYear: feature.get(\"Year\"),\n\t\t\tLink: feature.get(\"Link\"),\n\t\t\tID: feature.get(\"ID\")\n\t\t})\n\t\treturn feature.get(\"ID\")\n\t})\n\t// if (names.length > 0) {\n\t//   //infoBox.innerHTML = names.join(', ');\n\t// } else {\n\t//   infoBox.innerHTML = 'No points selected';\n\t// }\n})\n\n/*\n\tClick on marker \n\tShow the journal information in the table below the map for that journal artical\n*/\nmap.on(\"click\", (event) => {\n\t/*\n\t\tWhen the map is clicked\n\t\tClear the selected fetures\n\t\tset the dataArray to an empty array\n\t\tIf the table below the map is showing toggle it to not show\n\t\t\t-> For when a user click from a point to the map\n\t\t\t\n\t*/\n\tselectedFeatures.clear()\n\tdataArray = []\n\n\t// If the map is clickec and the table is showing hide the table\n\tif ($(\"#info\").is(\":visible\")) {\n\t\ttoggleLayers()\n\t}\n\n\t/*\n\t\tWhen a marker is clicked \n\t\tClear the Selected Features and dataArray\n\t\tIf the tabel below the map is showing toggle it off\n\t\t\t-> for when a user clicks from one marker to the next (resets it)\n\t*/\n\tmap.forEachFeatureAtPixel(event.pixel, (feature, layer) => {\n\t\tselectedFeatures.clear()\n\t\tdataArray = []\n\t\t$(\"#info-table > tbody\").html(\"\")\n\n\t\t// If a point is clicked and the table is showing hide the table\n\t\tif ($(\"#info\").is(\":visible\")) {\n\t\t\ttoggleLayers()\n\t\t}\n\n\t\tdone = []\n\t\ttest = null\n\t\tselectedFeatures.push(feature)\n\n\t\t// Add the selected features to the table\n\t\taddDataToTable()\n\n\t\t// Add the keywords to the word cloud for the clicked on marker\n\t\twordcloud()\n\n\t\t// Show the table for the clicked on journal artical\n\t\ttoggleLayers()\n\t})\n\n\t// Clear search bar contents\n\tdocument.querySelector(\"#search-input\").value = \"\"\n})\n\n/*\n\tSelect all btn clicked\n\tGet all the journal articals and add them to the table below the map\n*/\nconst selectAllBtn = document.querySelector(\"#select-all-btn\")\nselectAllBtn.addEventListener(\"click\", () => {\n\t// Clear selected feaures and empty the data array\n\tselectedFeatures.clear()\n\tdataArray = []\n\n\t// Loop through the vector layer and add each layer to the table below the map\n\tvectorLayer.getSource().forEachFeature((feature) => {\n\t\t$(\"#info-table > tbody\").html(\"\")\n\t\t// If the table is showing on the map hide it\n\t\tif ($(\"#info\").is(\":visible\")) {\n\t\t\ttoggleLayers()\n\t\t}\n\n\t\tdone = []\n\t\ttest = null\n\t\tselectedFeatures.push(feature)\n\n\t\t// Add all the data to the table\n\t\taddDataToTable()\n\n\t\t// Add the keywords to the word cloud for all the data\n\t\twordcloud()\n\n\t\t// Show the table below the map\n\t\ttoggleLayers()\n\t})\n\n\t// Clear search bar contents\n\tdocument.querySelector(\"#search-input\").value = \"\"\n})\n\n/*\n\tWhen the mouse moves over a feature on the map\n\tIf the feature is in the table style that row a light grey background\n\tOtherwise the row must be white background\n*/\nlet selected = null\nconst table = document.querySelector(\"#info-table\")\nmap.on(\"pointermove\", (event) => {\n\t// First check if the something is selected therefore table showing\n\tif ($(\"#info\").is(\":visible\")) {\n\t\t// If the mouse is not over a feature make the row colour white\n\t\tif (selected !== null) {\n\t\t\ttableRowColour(\"white\")\n\t\t\tselected = null\n\t\t}\n\n\t\t// When the mouse is over a feature make the selected variable equal to that feature\n\t\tmap.forEachFeatureAtPixel(event.pixel, (feature) => {\n\t\t\tselected = feature\n\t\t\treturn true\n\t\t})\n\n\t\tif (selected) {\n\t\t\ttableRowColour(\"lightgrey\")\n\t\t}\n\t}\n})\n\n/*\n\tFunction takes a parameter colour as a string \n\tLoops through the table and sets the corresponding map location features row colour \n*/\nconst tableRowColour = (colour) => {\n\tfor (const row of table.rows) {\n\t\tfor (const cell of row.cells) {\n\t\t\tif (selected.get(\"Title\") === cell.innerHTML) {\n\t\t\t\trow.style.backgroundColor = colour\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Instantiate with some options and add the Control\nconst geocoder = new Geocoder(\"nominatim\", {\n\tprovider: \"osm\",\n\tlang: \"en\",\n\tplaceholder: \"Search for ...\",\n\tlimit: 5,\n\tdebug: false,\n\tautoComplete: true,\n\tkeepOpen: true,\n\tfeatureStyle: new CircleStyle({\n\t\tradius: 6,\n\t\tfill: new Fill({ color: \"#000000\" }),\n\t\tstroke: new Stroke({ color: \"#f5f5f5\", width: 1.5 })\n\t})\n})\n\nmap.addControl(geocoder)\n\ngeocoder.on(\"addresschosen\", function (evt) {\n\tconsole.info(evt)\n})\n\nfunction testing(text) {\n\t//Creating the World Cloud\n\tZC.LICENSE = [\n\t\t\"569d52cefae586f634c54f86dc99e6a9\",\n\t\t\"b55b025e438fa8a98e32482b5f768ff5\"\n\t]\n\tzingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"\n\n\tvar myConfig = {\n\t\ttype: \"wordcloud\",\n\t\tbackgroundColor: \"#1F6B75\",\n\t\toptions: {\n\t\t\ttext: text,\n\t\t\tminLength: 3,\n\t\t\t//ignore: [\"America\", \"American\", \"Applause\", \"Because\", \"because\", \"could\", \"don’t\", \"people\", \"That’s\", \"that’s\", \"Their\", \"their\", \"there\", \"these\", \"thing\", \"those\", \"through\", \"We’re\", \"we’re\", \"where\", \"would\"],\n\t\t\tmaxItems: 25,\n\t\t\taspect: \"spiral\",\n\n\t\t\tcolorType: \"color\",\n\t\t\tcolor: \"#ffffff\",\n\n\t\t\tstyle: {\n\t\t\t\tfontFamily: \"Crete Round\"\n\t\t\t}\n\t\t}\n\t}\n\n\tzingchart.render({\n\t\tid: \"myChart\",\n\t\tdata: myConfig,\n\t\theight: \"200px\",\n\t\twidth: \"100%\"\n\t})\n}\n"],"names":[],"mappings":"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"}